# CRD handling
quarkus.operator-sdk.crd.apply=true
quarkus.operator-sdk.generate-csv=true
quarkus.operator-sdk.crd.validate=false

# https://issues.redhat.com/browse/MGDOBR-754
minikubeip=localhost

# SSO
event-bridge.sso.auth-server-url=${EVENT_BRIDGE_SSO_URL:http://${minikubeip}:30007/auth/realms/event-bridge-fm}
event-bridge.sso.client-id=${EVENT_BRIDGE_SSO_CLIENT_ID:shard-1}
event-bridge.sso.credentials.secret=${EVENT_BRIDGE_SSO_SECRET:clhG7KwrwLk1rYr4yEjtjjiTM1iU8Vbc}

# Shard ID
event-bridge.shard-id=${EVENT_BRIDGE_SHARD_ID:150b23e9-0b34-45b7-a91a-5ec388d03a1d}

# LOGGING
# Use unstructured logging in DEV/test
quarkus.log.console.json=${event-bridge.logging.json:true}
# Disable unnecessary fields
quarkus.log.console.json.fields.process-id.enabled=false
quarkus.log.console.json.fields.process-name.enabled=false
quarkus.log.console.json.fields.logger-class-name.enabled=false
quarkus.log.console.json.fields.thread-id.enabled=false
quarkus.log.console.json.fields.sequence.enabled=false

# For addOn installation secret with name `addon-smart-events-operator-parameters` needs to be import on operator deployment
event-bridge.secret.name=addon-smart-events-operator-parameters

# Metric names
rhose.metrics-name.operator.operation-total-count=managed_services_api_rhose_operator_operation_count
rhose.metrics-name.operator.operation-success-total-count=managed_services_api_rhose_operator_operation_success_count
rhose.metrics-name.operator.operation-failure-total-count=managed_services_api_rhose_operator_operation_failure_count
rhose.metrics-name.manager-requests-total-count=managed_services_api_rhose_manager_requests_count

event-bridge.istio.gateway.name=${EVENT_BRIDGE_ISTIO_GATEWAY_NAME:rhose-ingressgateway}
event-bridge.istio.gateway.namespace=${EVENT_BRIDGE_ISTIO_GATEWAY_NAMESPACE:istio-system}

event-bridge.istio.jwt.issuer=${EVENT_BRIDGE_ISTIO_JWT_ISSUER:https://sso.redhat.com/auth/realms/redhat-external}
event-bridge.istio.jwt.jwksUri=${EVENT_BRIDGE_ISTIO_JWT_JWKSURI:https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/certs}

# Observability operator
event-bridge.observability.enabled=${EVENT_BRIDGE_OBSERVABILITY_ENABLED:false}
event-bridge.observability.name=${EVENT_BRIDGE_OBSERVABILITY_NAME:smartevents-observability-configuration}
event-bridge.observability.namespace=${EVENT_BRIDGE_OBSERVABILITY_NAMESPACE:smartevents-observability}
event-bridge.observability.access_token=${EVENT_BRIDGE_OBSERVABILITY_ACCESS_TOKEN:}
event-bridge.observability.repository=${EVENT_BRIDGE_OBSERVABILITY_REPOSITORY:}
event-bridge.observability.channel=${EVENT_BRIDGE_OBSERVABILITY_CHANNEL:resources}
event-bridge.observability.tag=${EVENT_BRIDGE_OBSERVABILITY_TAG:main}
