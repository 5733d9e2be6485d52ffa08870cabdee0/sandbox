---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: rhose-prolong-stage
spec:
  schedule: "0 7 * * *"
  concurrencyPolicy: Forbid
  suspend: false
  jobTemplate:
    metadata:
      labels:
        cronjob: rhose-prolong-stage
    spec:
      backoffLimit: 5
      activeDeadlineSeconds: 1200
      template:
        metadata:
          labels:
            cronjob: rhose-prolong-stage
        spec:
          restartPolicy: OnFailure
          containers:
            - name: rhose-prolong-stage
              image: quay.io/app-sre/ubi8-ubi:8.7
              imagePullPolicy: IfNotPresent
              command:
                - /bin/bash
                - -c
                - |
                  # ocm and jq already installed in the image
                  ocm login --url staging --token $STAGE_TOKEN
                  
                  for CLUSTER_NAME in $(echo $CLUSTER_NAMES | sed "s/,/ /g")
                  do
                    echo "Getting id of cluster $CLUSTER_NAME"
                    CLUSTER_ID=`ocm get /api/clusters_mgmt/v1/clusters --parameter search="name like '$CLUSTER_NAME'" | jq -r '.items[0].id'`
                    echo "Prolonging cluster $CLUSTER_NAME with ID $CLUSTER_ID"
                    printf '{\n\t"expiration_timestamp": "%s"\n}\n' "$(date --iso-8601=seconds -d '+7 days')" | ocm patch /api/clusters_mgmt/v1/clusters/$CLUSTER_ID
                  done
              env:
              - name: CLUSTER_NAMES
                value: "rhose-dp-stage"
              - name: STAGE_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: stage-cron-job
                    key: OCM_TOKEN
              resources:
                limits:
                  cpu: 100m
                  memory: 150Mi
                requests:
                  cpu: 50m
                  memory: 1Mi
