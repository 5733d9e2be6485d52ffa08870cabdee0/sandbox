---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhose-fleet-manager
  labels:
    app: rhose-fleet-manager
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: rhose-fleet-manager
      labels:
        app-component: rhose-fleet-manager
    spec:
      selector:
        matchLabels:
          app-component: rhose-fleet-manager
      replicas: ${FLEET_MANAGER_REPLICAS}
      template:
        metadata:
          labels:
            app-component: rhose-fleet-manager
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - rhose-fleet-manager
                    topologyKey: kubernetes.io/hostname
                  weight: 90
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - rhose-fleet-manager
                    topologyKey: topology.kubernetes.io/zone
                  weight: 100
          serviceAccount: registry-rhose-appsre
          serviceAccountName: registry-rhose-appsre
          containers:
            - image: ${FLEET_MANAGER_IMAGE}:${FLEET_MANAGER_IMAGE_TAG}
              imagePullPolicy: IfNotPresent
              name: rhose-fleet-manager
              resources:
                limits:
                  cpu: ${FLEET_MANAGER_LIMITS_CPU}
                  memory: ${FLEET_MANAGER_LIMITS_MEMORY}
                requests:
                  cpu: ${FLEET_MANAGER_REQUESTS_CPU}
                  memory: ${FLEET_MANAGER_REQUESTS_MEMORY}
              env:
                - name: AWS_REGION
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: AWS_REGION
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: AWS_SECRET_ACCESS_KEY
                - name: CLOUDWATCH_AWS_REGION
                  valueFrom:
                    secretKeyRef:
                      name: ${CLOUDWATCH_SECRET_NAME}
                      key: aws_region
                - name: CLOUDWATCH_AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${CLOUDWATCH_SECRET_NAME}
                      key: aws_access_key_id
                - name: CLOUDWATCH_AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${CLOUDWATCH_SECRET_NAME}
                      key: aws_secret_access_key
                - name: CLOUDWATCH_LOG_GROUP_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${CLOUDWATCH_SECRET_NAME}
                      key: log_group_name
                - name: EVENT_BRIDGE_DB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.host
                - name: EVENT_BRIDGE_DB_PORT
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.port
                - name: EVENT_BRIDGE_DB_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.user
                - name: EVENT_BRIDGE_DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.password
                - name: EVENT_BRIDGE_DB_SCHEMA
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.name
                - name: EVENT_BRIDGE_DB_CA_CERT
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.ca_cert
                - name: EVENT_BRIDGE_DB_CONNECTION_PARAMS
                  value: ${EVENT_BRIDGE_DB_CONNECTION_PARAMS}
                - name: EVENT_BRIDGE_KAFKA_BOOTSTRAP_SERVERS
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_KAFKA_BOOTSTRAP_SERVERS
                - name: EVENT_BRIDGE_KAFKA_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_KAFKA_CLIENT_ID
                - name: EVENT_BRIDGE_KAFKA_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_KAFKA_CLIENT_SECRET
                - name: EVENT_BRIDGE_RHOAS_INSTANCE_API_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_RHOAS_INSTANCE_API_HOST
                - name: EVENT_BRIDGE_RHOAS_MGMT_API_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_RHOAS_MGMT_API_HOST
                - name: EVENT_BRIDGE_RHOAS_SSO_MAS_AUTH_SERVER_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_RHOAS_SSO_MAS_AUTH_SERVER_URL
                - name: EVENT_BRIDGE_RHOAS_SSO_MAS_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_RHOAS_SSO_MAS_CLIENT_ID
                - name: EVENT_BRIDGE_RHOAS_SSO_MAS_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_RHOAS_SSO_MAS_CLIENT_SECRET
                - name: EVENT_BRIDGE_RHOAS_SSO_RED_HAT_AUTH_SERVER_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_RHOAS_SSO_RED_HAT_AUTH_SERVER_URL
                - name: EVENT_BRIDGE_RHOAS_SSO_RED_HAT_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_RHOAS_SSO_RED_HAT_CLIENT_ID
                - name: EVENT_BRIDGE_SSO_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_SSO_CLIENT_ID
                - name: EVENT_BRIDGE_SSO_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_SSO_URL
                - name: MANAGED_CONNECTORS_KAFKA_BOOTSTRAP_SERVERS
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_KAFKA_BOOTSTRAP_SERVERS
                - name: MANAGED_CONNECTORS_KAFKA_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_KAFKA_CLIENT_ID
                - name: MANAGED_CONNECTORS_KAFKA_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_KAFKA_CLIENT_SECRET
                - name: MANAGED_CONNECTORS_AUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_AUTH_CLIENT_ID
                - name: MANAGED_CONNECTORS_AUTH_OFFLINE_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_AUTH_OFFLINE_TOKEN
                - name: MANAGED_CONNECTORS_AUTH_SERVER_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_AUTH_SERVER_URL
                - name: MANAGED_CONNECTORS_AUTH_TOKEN_PATH
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_AUTH_TOKEN_PATH
                - name: MANAGED_CONNECTORS_CLUSTER_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_CLUSTER_ID
                - name: MANAGED_CONNECTORS_NAMESPACE_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_NAMESPACE_ID
                - name: MANAGED_CONNECTORS_SERVICES_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_SERVICES_URL
                - name: MANAGED_CONNECTORS_TOPIC_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: MANAGED_CONNECTORS_TOPIC_NAME
                - name: QUARKUS_LOG_LEVEL
                  value: ${QUARKUS_LOG_LEVEL}
                - name: RHOAS_OPS_ACCOUNT_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: RHOAS_OPS_ACCOUNT_CLIENT_ID
                - name: SHARD_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: SHARD_ID
                - name: SHARD_ROUTER_CANONICAL_HOSTNAME
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: SHARD_ROUTER_CANONICAL_HOSTNAME
                - name: EVENT_BRIDGE_DNS_HOSTED_ZONE_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_DNS_HOSTED_ZONE_NAME
                - name: EVENT_BRIDGE_DNS_SUBDOMAIN_TLS_CERTIFICATE
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_DNS_SUBDOMAIN_TLS_CERTIFICATE
                - name: EVENT_BRIDGE_DNS_SUBDOMAIN_TLS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_DNS_SUBDOMAIN_TLS_KEY
                - name: EVENT_BRIDGE_DNS_SUBDOMAIN
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: EVENT_BRIDGE_DNS_SUBDOMAIN
                - name: EVENT_BRIDGE_DNS_AWS_ROUTE53_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: AWS_ACCESS_KEY_ID
                - name: EVENT_BRIDGE_DNS_AWS_ROUTE53_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: AWS_SECRET_ACCESS_KEY
              ports:
                - containerPort: 8080
              livenessProbe:
                httpGet:
                  path: /q/health/live
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
              readinessProbe:
                httpGet:
                  path: /q/health/ready
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
              volumeMounts:
                - name: rds
                  mountPath: /secrets/rds
          volumes:
            - name: rds
              secret:
                secretName: ${RDS_SECRET_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      name: rhose-fleet-manager
      labels:
        app: rhose-fleet-manager
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        app-component: rhose-fleet-manager
parameters:
  - name: CLOUDWATCH_SECRET_NAME
    value: rhose-cloudwatch
    displayName: the cloudWatch secret name
  - name: EVENT_BRIDGE_DB_CONNECTION_PARAMS
    value: ?ssl=true&sslmode=verify-full&sslrootcert=/secrets/rds/db.ca_cert
    description: the connection parameters for secure rds instance
  - name: FLEET_MANAGER_IMAGE
    value: "quay.io/app-sre/rhose-fleet-manager"
    description: the fleet-manager image name
  - name: FLEET_MANAGER_IMAGE_TAG
    value: "latest"
    description: the fleet-manager image tag
  - name: FLEET_MANAGER_LIMITS_CPU
    value: "2"
    description: the fleet-manager cpu limit
  - name: FLEET_MANAGER_LIMITS_MEMORY
    value: "4000Mi"
    description: the fleet-manager memory limit
  - name: FLEET_MANAGER_REQUESTS_CPU
    value: "1"
    description: the fleet-manager cpu request
  - name: FLEET_MANAGER_REQUESTS_MEMORY
    value: "2000Mi"
    description: the fleet-manager memory request
  - name: FLEET_MANAGER_SECRET_NAME
    value: fleet-manager
    description: the fleet-manager vault secret
  - name: FLEET_MANAGER_REPLICAS
    value: "3"
    description: the fleet-manager replicas
  - name: QUARKUS_LOG_LEVEL
    value: "INFO"
    description: the quarkus log level
  - name: RDS_SECRET_NAME
    value: rhosedb-rds
    description: the aws rds secret
  - name: EXTERNAL_DNS_ROUTE53_CREDS
    value: external-dns-route53-creds
    description: The kubernetes secret resource name that contains the aws route53 credentials