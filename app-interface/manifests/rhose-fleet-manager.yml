---
apiVersion: v1
kind: Template
metadata:
  name: rhose-fleet-manager
  labels:
    app: rhose-fleet-manager
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: rhose-fleet-manager
      labels:
        app-component: rhose-fleet-manager
    spec:
      selector:
        matchLabels:
          app-component: rhose-fleet-manager
      replicas: 3
      template:
        metadata:
          labels:
            app-component: rhose-fleet-manager
        spec:
          serviceAccount: registry-rhose-appsre
          serviceAccountName: registry-rhose-appsre
          containers:
            - image: ${FLEET_MANAGER_IMAGE}:${FLEET_MANAGER_IMAGE_TAG}
              imagePullPolicy: IfNotPresent
              name: rhose-fleet-manager
              resources:
                limits:
                  cpu: 4
                  memory: 8192Mi
                requests:
                  cpu: 2
                  memory: 4096Mi
              env:
                - name: EVENT_BRIDGE_DB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.host
                - name: EVENT_BRIDGE_DB_PORT
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.port
                - name: EVENT_BRIDGE_DB_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.user
                - name: EVENT_BRIDGE_DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.password
                - name: EVENT_BRIDGE_DB_SCHEMA
                  valueFrom:
                    secretKeyRef:
                      name: ${RDS_SECRET_NAME}
                      key: db.name
                - name: SHARD_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${FLEET_MANAGER_SECRET_NAME}
                      key: SHARD_ID
              ports:
                - containerPort: 8080
              livenessProbe:
                httpGet:
                  path: /q/health/live
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
              readinessProbe:
                httpGet:
                  path: /q/health/ready
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
  - apiVersion: v1
    kind: Service
    metadata:
      name: rhose-fleet-manager
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        app-component: rhose-fleet-manager
parameters:
  - name: FLEET_MANAGER_IMAGE
    value: "quay.io/app-sre/rhose-fleet-manager"
    displayName: the image of fleet-manager to deploy
  - name: FLEET_MANAGER_IMAGE_TAG
    value: "latest"
    displayName: the tag of fleet-manager to deploy
  - name: FLEET_MANAGER_SSO_URL
    value: "toReplace"
    displayName: the url to connect to the fleet-manager's SSO
  - name: FLEET_MANAGER_SSO_CLIENT_ID
    value: "toReplace"
    displayName: the client id to connect to the fleet-manager's SSO
  - name: RDS_SECRET_NAME
    value: rhosedb-rds
    displayName: the aws rds secret
  - name: FLEET_MANAGER_SECRET_NAME
    value: fleet-manager
    displayName: the fleet-manager vault secret
