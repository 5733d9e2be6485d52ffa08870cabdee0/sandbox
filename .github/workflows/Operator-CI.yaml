name: Shard Operator - CI
on:
  pull_request:
    paths:
      - 'shard-operator/**'
      - 'shard-operator-integration-tests/**'
jobs:
  event-bridge-build:
    env:
      MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120"
      NAMESPACE: mynamespace
    concurrency:
      group: event-bridge-operator-pr-${{ github.head_ref }}
      cancel-in-progress: true
    timeout-minutes: 45
    runs-on: ubuntu-latest
    name: Build and Test Operator
    steps:
      - name: Setup Maven And Java Version
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: 11
          maven-version: '3.8.1'
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Maven Packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      - name: Set up KinD
        uses: container-tools/kind-action@v1
        with:
          config: .github/kind-config.yaml
          registry: false                  # Registry not needed
          node_image: kindest/node:v1.22.2 # Newest image
      - name: Check cluster status
        run: |
          kubectl get nodes
          kubectl cluster-info
      - name: Install Ingres
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.4/deploy/static/provider/kind/deploy.yaml
          kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=90s
        # Tests are executed in different PR check, we just need all artifacts in repository
      - name: Build complete repo
        shell: bash
        run: mvn clean install --no-snapshot-updates --fail-at-end --errors --quiet -DskipTests
        # Build operator image and generate needed operator resources
      - name: Build Shard operator image and resources
        shell: bash
        working-directory: shard-operator
        run: mvn clean install --errors --quiet -Pminikube -Dquarkus.container-image.tag=$GITHUB_SHA -Dnamespace=$NAMESPACE -DskipTests
        # Load built image into KinD
      - name: Load Shard operator image into KinD
        run: |
          # KinD needs a specific version to skip external image pull, in case of default 'latest' version KinD would try to fetch the image from external location
          kind load docker-image openbridge/shard-operator:$GITHUB_SHA
      - name: Deploy Shard operator
        run: |
          kubectl create namespace $NAMESPACE
          # Operator requires Keycloak instance to be available, install it
          kubectl create secret generic keycloak-realm --from-file=event-bridge-fm-realm-sample.json=dev/docker-compose/keycloak-config/event-bridge-fm-realm-sample.json -n $NAMESPACE
          kubectl create secret generic keycloak-secrets --from-literal=KEYCLOAK_USER=admin --from-literal=KEYCLOAK_PASSWORD=123 -n $NAMESPACE
          # Not ideal as kustomize is used for different purposes but it is the easiest approach without duplications
          kubectl create -f kustomize/base/keycloak/resources/keycloak.yaml -n $NAMESPACE
          kubectl wait --for=condition=available --timeout=120s deployment/keycloak -n $NAMESPACE
          # Deploy operator
          kubectl apply -f shard-operator/target/kubernetes/bridgeingresses.com.redhat.service.bridge-v1.yml
          kubectl apply -f shard-operator/target/kubernetes/bridgeexecutors.com.redhat.service.bridge-v1.yml
          kubectl apply -f shard-operator/target/kubernetes/minikube.yml
          # Point SSO URL to the Keycloak Service port, use HTTP to avoid complications with certificate
          kubectl set env deployment/shard-operator EVENT_BRIDGE_SSO_URL=http://keycloak:8180/auth/realms/event-bridge-fm -n $NAMESPACE
          kubectl wait --for=condition=available --timeout=120s deployment/shard-operator -n $NAMESPACE
          # Add Prometheus ServiceMonitor CRD to avoid BridgeIngress Condition Ready: False Type: PrometheusUnavailable
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/kube-prometheus/v0.9.0/manifests/setup/prometheus-operator-0servicemonitorCustomResourceDefinition.yaml
      - name: Run integration tests
        shell: bash
        working-directory: shard-operator-integration-tests
        run: mvn clean verify -Pcucumber
      - name: Archive test logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cucumber-logs
          path: shard-operator-integration-tests/target/logs/**/*.*
      - name: Print operator log
        if: always()
        run: |
          kubectl logs deployment/shard-operator -n $NAMESPACE
      - name: Print Keycloak log
        if: always()
        run: |
          kubectl logs deployment/keycloak -n $NAMESPACE
