name: Bridge - CD
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - '**/.gitignore'
      - '**.md'
      - '**.adoc'
      - '*.txt'
      - '.github/**'
      - 'kustomize/**'
      
jobs:
  event-bridge-build:
    env:
      MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
      OUTPUT_CONTAINER_NAME: quay.io/5733d9e2be6485d52ffa08870cabdee0/event-bridge-all-in-one:${{ github.sha }}
    timeout-minutes: 30
    runs-on: ubuntu-latest
    if: github.repository == '5733d9e2be6485d52ffa08870cabdee0/sandbox'
    name: Publish JARs and Containers
    steps:
      - name: Disk space report before modification
        shell: bash
        run: |
          echo "Available storage:"
          df -h
      # Inspired to maximize-build-space action https://github.com/easimon/maximize-build-space
      - name: Free disk space (remove dotnet, android and haskell)
        shell: bash
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
      - name: Disk space report after modification
        shell: bash
        run: |
          echo "Available storage:"
          df -h
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Maven Packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      - name: Build JARs
        shell: bash
        run: mvn --batch-mode package -Dmaven.test.skip=true -Dcheckstyle.skip
      - name: Login to Container Registry
        shell: bash
        env:
          CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
          CONTAINER_REGISTRY_USER: ${{ secrets.CONTAINER_REGISTRY_USER }}
        run: docker login quay.io --username $CONTAINER_REGISTRY_USER --password $CONTAINER_REGISTRY_PASSWORD
      - name: Build and Publish JVM Container
        shell: bash
        run: |
          docker build -f runner/src/main/docker/Dockerfile.jvm -t $OUTPUT_CONTAINER_NAME-jvm runner/
          docker push $OUTPUT_CONTAINER_NAME-jvm
          docker image rm -f $OUTPUT_CONTAINER_NAME-jvm
#
