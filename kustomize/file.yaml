apiVersion: v1
data:
  EVENT_BRIDGE_DB_HOST: event-bridge-db
  EVENT_BRIDGE_DB_PASSWORD: postgres
  EVENT_BRIDGE_DB_PORT: "5432"
  EVENT_BRIDGE_DB_SCHEMA: event-bridge
  EVENT_BRIDGE_DB_USERNAME: postgres
  EVENT_BRIDGE_MANAGER_URL: http://event-bridge:8080
  KAFKA_BOOTSTRAP_SERVERS: event-bridge-kafka:9092
kind: ConfigMap
metadata:
  labels:
    app: event-bridge
  name: event-bridge-all-in-one-config
  namespace: event-bridge-prod
---
apiVersion: v1
data:
  PGDATA: /var/lib/postgresql/data/pgdata
  POSTGRES_DB: event-bridge
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
kind: ConfigMap
metadata:
  labels:
    app: event-bridge
  name: event-bridge-db-config
  namespace: event-bridge-prod
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: event-bridge
  name: event-bridge-db
  namespace: event-bridge-prod
spec:
  ports:
  - name: mytcp
    port: 5432
    protocol: TCP
  selector:
    app: event-bridge
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: event-bridge
  name: event-bridge
  namespace: event-bridge-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-bridge
  template:
    metadata:
      labels:
        app: event-bridge
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: event-bridge-all-in-one-config
        image: quay.io/jrota/event-bridge-all-in-one:492fec50f46007f2a350e58ffd97975efdbf8f94-jvm
        imagePullPolicy: Always
        name: event-bridge-all-in-one
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: event-bridge
  name: event-bridge-db
  namespace: event-bridge-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-bridge
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: event-bridge
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: event-bridge-db-config
        image: library/postgres:13.1
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: event-bridge-db
      volumes:
      - name: event-bridge-db
        persistentVolumeClaim:
          claimName: event-bridge-db
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  labels:
    app: event-bridge
  name: event-bridge-kafka
  namespace: event-bridge-prod
spec:
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafka:
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.min.isr: 1
      transaction.state.log.replication.factor: 1
    listeners:
    - name: plain
      port: 9092
      tls: false
      type: internal
    - name: tls
      port: 9093
      tls: true
      type: internal
    - name: external
      port: 9094
      tls: false
      type: nodeport
    replicas: 1
    storage:
      type: jbod
      volumes:
      - deleteClaim: false
        id: 0
        size: 10Gi
        type: persistent-claim
  zookeeper:
    replicas: 1
    storage:
      deleteClaim: false
      size: 10Gi
      type: persistent-claim
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  labels:
    app: event-bridge
    strimzi.io/cluster: event-bridge-kafka
  name: events
  namespace: event-bridge-prod
spec:
  partitions: 1
  replicas: 1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: event-bridge
  name: event-bridge-db
  namespace: event-bridge-prod
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
